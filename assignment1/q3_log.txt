% Enter the names of ID of your group members below.
% For STUDENT ID, use your 9-digit ONECARD number.
% If you have 2 group members, leave the last entry blank.
%
%%%%%
%%%%% NAME: Arjun Bhandal
%%%%% STUDENT ID: 501088530
%%%%%
%%%%% NAME:
%%%%% STUDENT ID:
%%%%%
%%%%% NAME:
%%%%% STUDENT ID:


% Add your queries below. Please use the following format
% 
% %%%%% QUERY 2
% % EXPLANATION: Checks if there is a block on blockA
% on(X, blockA).
%
% where 2 is the number of the query. The EXPLANATION line should contain your explanation 
% in English of what the query tests. Omit the "%" on the line with the query
% Don't forget to end queries with a period.





%%%%% SECTION: q3a_queries
% Put your queries for testing canReach in this section

%%%%%% QUERY 1
% EXPLANATION: This tests if two actors are direct co-stars in a movie.
canReach(al_pacino, diane_keaton, 1).


%%%%%% QUERY 2.
% EXPLANATION: This tests if an actor is directly related to themselves.
canReach(emma_watson, emma_watson, 0).


%%%%%% QUERY 3.
% EXPLANATION: This looks for a chain of length 2. It means James Caan co-starred with someone, and that person co-starred with Robert De Niro.
canReach(diane_keaton, robert_de_niro, 2).


%%%%%% QUERY 4
% EXPLANATION: This lists everyone who co-starred directly with Al Pacino. The variable X will bind to each co-star.
canReach(X, al_pacino, 1).


%%%%%% QUERY 5
% EXPLANATION: Tries to connect actors who never co-starred. This should fail, showing the rule doesn’t invent links.
canReach(tom_hanks, robert_pattinson, 1).



%%%%% SECTION: q3b_queries
% Put your queries for testing canReachThroughMovie in this section

%%%%%% QUERY 1
% EXPLANATION: Tests if Al Pacino and Diane Keaton can be linked in exactly 1 step through The Godfather. Should succeed. 
canReachThroughMovie(al_pacino, diane_keaton, the_godfather, 1).


%%%%%% QUERY 2
% EXPLANATION: Checks if Al Pacino can reach Robert De Niro in at most 2 steps, with at least one step involving The Godfather Part II. Shold succeed.
canReachThroughMovie(al_pacino, robert_de_niro, the_godfather_part_2, 2).


%%%%%% QUERY 3
% EXPLANATION: This should fail, since part (b) forbids self-loops as the way to satisfy the movie requirement.
canReachThroughMovie(al_pacino, al_pacino, the_godfather, 1).


%%%%%% QUERY 4
% EXPLANATION: Lists all actors X that Al Pacino can connect to in ≤ 2 steps where The Godfather is used at least once.
canReachThroughMovie(al_pacino, X, the_godfather, 2).


%%%%%% QUERY 5
% EXPLANATION Should fail, since Tom Hanks does not appear in the knowledge base and can’t be reached.: 
canReachThroughMovie(tom_hanks, robert_de_niro, godfather, 2).



%%%%% SECTION: q3c_queries
% Put your queries for testing canReachThrough2Movies in this section

%%%%%% QUERY 1
% EXPLANATION: This query succeeds because there is a valid 3-step path from Al Pacino to Robert De Niro that uses both movies. One possible path is: Al Pacino goes to Diane Keaton through The Godfather, Diane Keaton goes back to Al Pacino again through The Godfather, and finally Al Pacino goes to Robert De Niro through The Godfather Part II. Both movies are included in the path, and the number of steps (3) is within the limit, so the query succeeds. 
canReachThrough2Movies(al_pacino, robert_de_niro, the_godfather, the_godfather_part_2, 3).


%%%%%% QUERY 2
% EXPLANATION: This query fails because there is no path of length 2 or less that uses both The Godfather and The Godfather Part II. In two steps, either only The Godfather is used or only The Godfather Part II is used, but not both. To involve both movies, at least three steps are required, so the query does not succeed.
canReachThrough2Movies(al_pacino, robert_de_niro, the_godfather, the_godfather_part_2, 2).



%%%%%% QUERY 3
% EXPLANATION: This query succeeds because when the two movies are the same, the requirement is that the movie must be used at least twice. In this case, Al Pacino can go to James Caan through The Godfather, and then James Caan can go to Diane Keaton again through The Godfather. The movie is used twice, the path length is 2 which is less than 3, and therefore the query succeeds.
canReachThrough2Movies(al_pacino, diane_keaton, the_godfather, the_godfather, 3).



%%%%%% QUERY 4
% EXPLANATION: This query fails because with only one step available, Al Pacino can connect directly to Diane Keaton through The Godfather only once. Since the requirement in this case is that the same movie must appear at least twice in the path, one step is not enough to meet the condition, and the query fails.
canReachThrough2Movies(al_pacino, diane_keaton, the_godfather, the_godfather, 1).


%%%%%% QUERY 5
% EXPLANATION: This query fails because Tom Hanks does not appear in the knowledge base at all. Since there is no actedIn fact for Tom Hanks, it is impossible to construct any path starting from him. Without an initial step, no path can exist, so the query returns failure.
canReachThrough2Movies(tom_hanks, robert_de_niro, the_godfather, the_godfather_part_2, 3).




%%%%% SECTION: q3_interaction_log
% Put a log of your interaction of your tests with the above queries for all 3 parts here
% Part a
%?- canReach(al_pacino, diane_keaton, 1).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReach(emma_watson, emma_watson, 0).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReach(diane_keaton, robert_de_niro, 2).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReach(X, al_pacino, 1).
%X = al_pacino
%Yes (0.00s cpu, solution 1, maybe more)
%X = al_pacino
%Yes (0.00s cpu, solution 2, maybe more)
%X = al_pacino
%Yes (0.00s cpu, solution 3, maybe more)
%X = al_pacino
%Yes (0.00s cpu, solution 4, maybe more)
%X = james_caan
%Yes (0.00s cpu, solution 5, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 6, maybe more)
%X = robert_de_niro
%Yes (0.00s cpu, solution 7, maybe more)
%X = james_caan
%Yes (0.00s cpu, solution 8, maybe more)
%X = james_caan
%Yes (0.00s cpu, solution 9, maybe more)
%X = james_caan
%Yes (0.00s cpu, solution 10, maybe more)
%X = james_caan
%Yes (0.00s cpu, solution 11, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 12, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 13, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 14, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 15, maybe more)
%X = robert_de_niro
%Yes (0.00s cpu, solution 16, maybe more)
%X = robert_de_niro
%Yes (0.00s cpu, solution 17, maybe more)
%X = robert_de_niro
%Yes (0.00s cpu, solution 18, maybe more)
%X = robert_de_niro
%Yes (0.00s cpu, solution 19, maybe more)
%No (0.00s cpu)
%?- canReach(tom_hanks, robert_pattinson, 1).
%No (0.00s cpu)

% Part b
%?- canReachThroughMovie(al_pacino, diane_keaton, the_godfather, 1).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReachThroughMovie(al_pacino, robert_de_niro, the_godfather_part_2, 2).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReachThroughMovie(al_pacino, al_pacino, the_godfather, 1).
%No (0.00s cpu)
%?- canReachThroughMovie(al_pacino, X, the_godfather, 2).
%X = james_caan
%Yes (0.00s cpu, solution 1, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 2, maybe more)
%X = diane_keaton
%Yes (0.00s cpu, solution 3, maybe more)
%X = james_caan
%Yes (0.00s cpu, solution 4, maybe more)
%No (0.00s cpu)
%?- canReachThroughMovie(tom_hanks, robert_de_niro, godfather, 2).
%No (0.00s cpu)

% Part c
%?- canReachThrough2Movies(al_pacino, robert_de_niro, the_godfather, the_godfather_part_2, 3).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReachThrough2Movies(al_pacino, robert_de_niro, the_godfather, the_godfather_part_2, 2).
%No (0.00s cpu)
%?- canReachThrough2Movies(al_pacino, diane_keaton, the_godfather, the_godfather, 3).
%Yes (0.00s cpu, solution 1, maybe more)
%?- canReachThrough2Movies(al_pacino, diane_keaton, the_godfather, the_godfather, 1).
%No (0.00s cpu)
%?- canReachThrough2Movies(tom_hanks, robert_de_niro, the_godfather, the_godfather_part_2, 3).
No (0.00s cpu)
